
> # import data -------------------------------------------------------------
> 
> save.path <- '~/GitHub/reproducible-research/Day-3/datasets'

> save.file <- '/basic-grouping-plotting.rda'

> load(file.path(save.path, save.file))

> cbbPalette <-
+   c("#000000", "#E69F00", "#56B4E9", 
+     "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

> cbPalette <-
+   c("#999999", "#E69F00", "#56B4E9", 
+     "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

> # base R with customization -----------------------------------------------
> 
> # see help(par) on how to set base styles
> # and the R reference c .... [TRUNCATED] 

> plot(col1 ~ col5, data = plot.df, ylim = c(60, 110),
+      type = "l", bty = "l", las = 1, 
+      main = "Column 1 vs. Column 5", 
+      xlab = " ..." ... [TRUNCATED] 

> grid(NA, NULL, col = "black", lty = "dotted", lwd = 0.3)

> # Feltron style
> 
> par(bg = "#36394A", mar = c(5, 4, 3, 2), oma = c(0,0,0,0), 
+     xpd = FALSE, xaxs = "r", yaxs = "i", mgp = c(2.8,0.3,0.5), 
+ .... [TRUNCATED] 

> plot(x = rnorm(n = 200, mean = 55, sd = 14), 
+      y = rnorm(n = 200, mean = 1000, sd = 12),
+      type = "p", bty = "n", las = 1, asp = 1/2, col .... [TRUNCATED] 

> # ggplot 2 with customization ---------------------------------------------
> 
> # create 538-style plot
> # adapted from http://minimaxir.com/2015/ .... [TRUNCATED] 

> library(scales)

> library(grid)

> library(RColorBrewer)

> # changed font size so that it is readable (15 point)
> 
> fte_theme <- function() {
+   
+   # Generate the colors for the chart procedurally with  .... [TRUNCATED] 

> # theme that includes the legend
> fte_theme2 <- function() {
+   
+   # Generate the colors for the chart procedurally with RColorBrewer
+   palett .... [TRUNCATED] 

> # plot data.frame
> 
> ggplot(plot.df, aes(x = col5, y = col1)) +
+   geom_point() + 
+   fte_theme()

> ggplot(plot.df, aes(x = col5, y = col1)) +
+   geom_point() + 
+   geom_smooth() + 
+   fte_theme()

> # change the smoothing method
> ggplot(plot.df, aes(x = col5, y = col1)) +
+   geom_point() + 
+   geom_smooth(method = 'lm', colour = 'black') +
+  .... [TRUNCATED] 

> ggplot(plot.df, aes(x = col5, y = col1)) +
+   geom_point() + 
+   geom_smooth(method = 'glm', colour = 'red', fill = 'red') +
+   fte_theme()

> ggplot(plot.df, aes(x = col5, y = col1)) +
+   geom_line(linetype = 'solid', size = 1.3) + 
+   labs(title = 'Column 1 vs. Column 5', x = 'Column 5' .... [TRUNCATED] 

> # bar plot
> ggplot(plot.df, aes(x = Category, y = col1)) +
+   geom_bar(stat = 'identity', aes(fill = Category)) + 
+   labs(title = 'Column 1 cate .... [TRUNCATED] 

> # bar plot with error bars
> 
> library(dplyr)

> col1.err <-
+   plot.df %>% 
+   group_by(Category) %>% 
+   summarize(meanCol1 = mean(col1), n = sum(complete.cases(col1)),
+             errCol1 = .... [TRUNCATED] 

> dodge <- position_dodge(width = 0.9)

> ggplot(col1.err, aes(x = Category, y = meanCol1)) +
+   geom_bar(stat = 'identity', aes(fill = Category)) + 
+   geom_errorbar(aes(ymin = meanCol1 - .... [TRUNCATED] 

> # boxplots
> ggplot(plot.df, aes(x = Category, y = col2)) + 
+   geom_boxplot(aes(fill = col3Cut), outlier.colour = 'red') +
+   labs(title = 'Colum .... [TRUNCATED] 

> # create own theme --------------------------------------------------------
> 
> red_black_theme <- function() {
+   
+   # Generate the colors for  .... [TRUNCATED] 

> dark2_vals <- c("#1B9E77", "#D95F02", "#7570B3",
+   "#E7298A", "#66A61E", "#E6AB02", "#A6761D", "#666666")

> norm.col1 <- rnorm(n = 2000, mean = 50, sd = 15)

> norm.col2 <- rnorm(n = 2000, mean = 300, sd = 40)

> norm.data <- data.frame(norm.col1, norm.col2)

> norm.data$Category <- 
+   gl(n = 4, k = 20, labels = c('one', 'two', 'three', 'four'))

> col2.vs.col5.2d.density <- 
+   ggplot(norm.data, aes(x = norm.col1, y = norm.col2)) +
+   stat_density2d(aes(fill = Category, colour = Category), 
 .... [TRUNCATED] 

> straight_goth <- function() {
+   
+   color.background = '#000000'
+   color.grid.major = 'white'
+   color.axis.text = 'white'
+   color.axis.titl .... [TRUNCATED] 

> points <- seq(-20, 20, 1)

> growth.saturation <- plogis(points, scale = 3)

> frustration.curve <- data.frame(points, growth.saturation)

> goth.model <- 
+   ggplot(frustration.curve, aes(x = points, y = growth.saturation)) +
+   geom_smooth(colour = 'red', size = 2, 
+               me .... [TRUNCATED] 

> goth.model

> # saving ggplot objects
> 
> ggsave(filename = '~/GitHub/reproducible-research/Day-3/datasets/goth-eps.eps',
+        plot = goth.model, width = 10, .... [TRUNCATED] 

> ggsave(filename = '~/GitHub/reproducible-research/Day-3/datasets/goth-pdf.pdf',
+        plot = goth.model, width = 10, height = 10, units = 'in', d .... [TRUNCATED] 

> ggsave(filename = '~/GitHub/reproducible-research/Day-3/datasets/goth-tiff.tiff',
+        plot = goth.model, width = 10, height = 10, units = 'in', .... [TRUNCATED] 

> ggsave(filename = '~/GitHub/reproducible-research/Day-3/datasets/goth-tex.tex',
+        plot = goth.model, width = 10, height = 10, units = 'in', d .... [TRUNCATED] 

> # feltron style theme with large facets and bold headings
> 
> feltron_theme <- function() {
+ 
+ color.background = '#36394A'
+ color.grid.major =  .... [TRUNCATED] 

> feltron.anger <- 
+   ggplot(frustration.curve, aes(x = points, y = growth.saturation)) +
+   geom_line(colour = '#E3DF0C', size = 2) +
+   red_blac .... [TRUNCATED] 

> feltron.anger

> ggsave(filename = '~/GitHub/reproducible-research/Day-3/datasets/feltron-anger-pdf.pdf',
+        plot = feltron.anger, width = 10, height = 10, uni .... [TRUNCATED] 

> sink()
